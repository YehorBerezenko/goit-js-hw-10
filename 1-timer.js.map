{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('.js-button');\nconst inputEl = document.querySelector('.js-input');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please choose a date in the future',\n            position: 'topRight',\n            timeout: 3000,\n          });\n      startBtn.disabled = true;\n      return;\n    }\n\n    userSelectedDate = selectedDate;\n    startBtn.disabled = false;\n  },\n};\n\nflatpickr(inputEl, options);\n\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true; \n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const timeDiff = userSelectedDate - now;\n\n    if (timeDiff <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerUI(0);\n      return;\n    }\n\n    updateTimerUI(timeDiff);\n  }, 1000);\n});\n\n\nfunction updateTimerUI(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysEl.textContent = padZero(days);\n  hoursEl.textContent = padZero(hours);\n  minutesEl.textContent = padZero(minutes);\n  secondsEl.textContent = padZero(seconds);\n}\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor((ms % hour) / minute),\n    seconds: Math.floor((ms % minute) / second),\n  };\n}\n\n\nfunction padZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startBtn","inputEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","countdownInterval","options","selectedDates","selectedDate","iziToast","flatpickr","timeDiff","updateTimerUI","ms","days","hours","minutes","seconds","convertMs","padZero","value"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAU,SAAS,cAAc,WAAW,EAC5CC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAoB,KAGxBP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEpC,GAAIC,GAAgB,IAAI,KAAQ,CAC5BC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,WACV,QAAS,GACrB,CAAW,EACLX,EAAS,SAAW,GACpB,MACN,CAEIM,EAAmBI,EACnBV,EAAS,SAAW,EACrB,CACH,EAEAY,EAAUX,EAASO,CAAO,EAG1BR,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GAEpBO,EAAoB,YAAY,IAAM,CAEpC,MAAMM,EAAWP,EADL,IAAI,KAGhB,GAAIO,GAAY,EAAG,CACjB,cAAcN,CAAiB,EAC/BO,EAAc,CAAC,EACf,MACN,CAEIA,EAAcD,CAAQ,CACvB,EAAE,GAAI,EACT,CAAC,EAGD,SAASC,EAAcC,EAAI,CACzB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EAAUL,CAAE,EACtDb,EAAO,YAAcmB,EAAQL,CAAI,EACjCb,EAAQ,YAAckB,EAAQJ,CAAK,EACnCb,EAAU,YAAciB,EAAQH,CAAO,EACvCb,EAAU,YAAcgB,EAAQF,CAAO,CACzC,CAGA,SAASC,EAAUL,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAOA,EAAK,KAAQ,GAAM,EACxC,QAAS,KAAK,MAAOA,EAAK,IAAU,GAAM,CAC3C,CACH,CAGA,SAASM,EAAQC,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}